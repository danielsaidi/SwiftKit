{"seeAlsoSections":[{"title":"Services","identifiers":["doc:\/\/SwiftKit\/documentation\/SwiftKit\/MultiProxy","doc:\/\/SwiftKit\/documentation\/SwiftKit\/Proxy"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decorator"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be used to implement the “decorator pattern” which"},{"type":"text","text":" "},{"type":"text","text":"lets you compose functionality without inheritance."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, say that you have an external movie api, from"},{"type":"text","text":" "},{"type":"text","text":"which you fetch moves. A "},{"type":"codeVoice","code":"MovieService"},{"type":"text","text":" protocol could then"},{"type":"text","text":" "},{"type":"text","text":"be used to generally describe how to fetch movies, while an"},{"type":"text","text":" "},{"type":"codeVoice","code":"ApiMovieService"},{"type":"text","text":" class could provide a pure implementation"},{"type":"text","text":" "},{"type":"text","text":"of the protocol, by communicating directly with the api. In"},{"type":"text","text":" "},{"type":"text","text":"order to add things like caching, offline support etc. your"},{"type":"text","text":" "},{"type":"text","text":"app could now implement other "},{"type":"codeVoice","code":"MovieService"},{"type":"text","text":" implementation"},{"type":"text","text":" "},{"type":"text","text":"classes, that instead of inheriting "},{"type":"codeVoice","code":"ApiMovieService"},{"type":"text","text":" apply"},{"type":"text","text":" "},{"type":"text","text":"aisolated features on top of any "},{"type":"codeVoice","code":"MovieService"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This gives you a more modular way of composing features. It"},{"type":"text","text":" "},{"type":"text","text":"lets you avoid long dependency chains, makes it easier when"},{"type":"text","text":" "},{"type":"text","text":"unit testing etc."}]}]}],"variants":[{"paths":["\/documentation\/swiftkit\/decorator"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftKit\/documentation\/SwiftKit\/Decorator","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This class can be inherited by any class that wraps another"},{"type":"text","text":" "},{"type":"text","text":"class that implements the same protocol."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decorator"}],"title":"Decorator","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:8SwiftKit9DecoratorC","modules":[{"name":"SwiftKit"}],"navigatorTitle":[{"kind":"identifier","text":"Decorator"}]},"hierarchy":{"paths":[["doc:\/\/SwiftKit\/documentation\/SwiftKit"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftKit\/documentation\/SwiftKit\/Decorator\/init(base:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SwiftKit\/documentation\/SwiftKit\/Decorator\/base"]}],"references":{"doc://SwiftKit/documentation/SwiftKit/Proxy":{"role":"symbol","title":"Proxy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Proxy"}],"abstract":[{"type":"text","text":"This class can be implemented by any classes that should be"},{"type":"text","text":" "},{"type":"text","text":"used to proxy a certain operation to another target."}],"identifier":"doc:\/\/SwiftKit\/documentation\/SwiftKit\/Proxy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Proxy"}],"url":"\/documentation\/swiftkit\/proxy"},"doc://SwiftKit/documentation/SwiftKit/Decorator":{"role":"symbol","title":"Decorator","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decorator"}],"abstract":[{"type":"text","text":"This class can be inherited by any class that wraps another"},{"type":"text","text":" "},{"type":"text","text":"class that implements the same protocol."}],"identifier":"doc:\/\/SwiftKit\/documentation\/SwiftKit\/Decorator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Decorator"}],"url":"\/documentation\/swiftkit\/decorator"},"doc://SwiftKit/documentation/SwiftKit":{"role":"collection","title":"SwiftKit","abstract":[{"type":"text","text":"SwiftKit adds extra functionality to the Swift programming language."}],"identifier":"doc:\/\/SwiftKit\/documentation\/SwiftKit","kind":"symbol","type":"topic","url":"\/documentation\/swiftkit"},"doc://SwiftKit/documentation/SwiftKit/MultiProxy":{"role":"symbol","title":"MultiProxy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiProxy"}],"abstract":[{"type":"text","text":"This class can be implemented by any classes that should be"},{"type":"text","text":" "},{"type":"text","text":"used to proxy a certain operation to many targets."}],"identifier":"doc:\/\/SwiftKit\/documentation\/SwiftKit\/MultiProxy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MultiProxy"}],"url":"\/documentation\/swiftkit\/multiproxy"},"doc://SwiftKit/documentation/SwiftKit/Decorator/base":{"role":"symbol","title":"base","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:8SwiftKit9DecoratorC1Txmfp"}],"abstract":[],"identifier":"doc:\/\/SwiftKit\/documentation\/SwiftKit\/Decorator\/base","kind":"symbol","type":"topic","url":"\/documentation\/swiftkit\/decorator\/base"},"doc://SwiftKit/documentation/SwiftKit/Decorator/init(base:)":{"role":"symbol","title":"init(base:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:8SwiftKit9DecoratorC1Txmfp"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftKit\/documentation\/SwiftKit\/Decorator\/init(base:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftkit\/decorator\/init(base:)"}}}